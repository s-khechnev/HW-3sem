@page "/movie/{movieId:int}/"
@inject DataLoader DataLoader

@if (_movie != null)
{
    <div class="d-inline-flex">
        @if (_imdbMovie != null)
        {
            <img src="@_imdbMovie.Poster" width="400px" height="400px"
                 alt="https://cspromogame.ru//storage/upload_images/avatars/4137.jpg"/>
        }
        <div class="row mx-3">
            <h3>@_movie.OriginalTitle</h3>
            <div class="d-inline-flex">
                <p>Tags: </p>
                @if (_movie.Tags != null)
                {
                    foreach (var item in _movie.Tags.Take(5))
                    {
                        <a href="tag/@item.Id" class="mx-1 text-decoration-none">@item.Name</a>
                    }
                }
            </div>
            <div class="d-inline-flex">
                <p>Persons: </p>
                @if (_movie.Persons != null)
                {
                    foreach (var item in _movie.Persons.Take(5))
                    {
                        <a href="person/@item.Id" class="mx-1 text-decoration-none">@item.Name</a>
                    }
                }
            </div>
            @if (_imdbMovie != null)
            {
                <p>
                    Сюжет: @_imdbMovie.Plot
                </p>
                <p>
                    Рейтинг: @_imdbMovie.ImdbRating
                </p>
            }
            @if (_movie.Top != null)
            {
                <MovieList Movies="@(_movie.Top.OrderBy(m => m.Rating))"></MovieList>
            }
        </div>
    </div>
}

@code {

    [Parameter]
    public int MovieId { get; set; }

    private Movie? _movie;
    private ImdbMovie? _imdbMovie;

    protected override async Task OnParametersSetAsync()
    {
        _movie = await DataLoader.GetMovieByIdAsync(MovieId);

        if (_movie != null)
            _imdbMovie = await DataLoader.GetImdbMovieByIdImdbAsync(_movie.IdImdb);
    }

}